services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: bookstore-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: bookstore
      MYSQL_USER: bookstore
      MYSQL_PASSWORD: bookstore123
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --init-connect='SET NAMES utf8mb4'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mysql", "-u", "root", "-p123456"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - bookstore-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: bookstore-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bookstore-network

  # 后端服务
  backend:
    build: .
    container_name: bookstore-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - bookstore-network

  # 用户端前端
  frontend:
    build:
      context: ./bookstore-frontend
      dockerfile: Dockerfile
    container_name: bookstore-frontend
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - bookstore-network

  # 管理端前端
  admin-frontend:
    build:
      context: ./bookstore-admin-frontend
      dockerfile: Dockerfile
    container_name: bookstore-admin-frontend
    ports:
      - "3001:3000"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - bookstore-network

volumes:
  mysql_data:
  redis_data:

networks:
  bookstore-network:
    driver: bridge